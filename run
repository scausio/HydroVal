#!/usr/bin/env python

from bins.utils import getConfigurationByID
import os
import time
from plots import profiles_plt,ts_Argo2exps_plt,ts_Argo_plt,hovmoller_plt,sst_plt,sla_plt,TS_plt,ts_SalinityVol_plt,currents_rose_plt,ts_DomainAvg_plt
from plots import ts_DepthBins_plt,profiles_errorEvolution_plt,ts_currents_plt,OC_plt,mvr_plt,anomaly_hovmoller_plt,anomaly_ts_DomainAvg_plt
from plots import anomaly_map_plt,ts_MLD_plt


expsName=['bs-test-int-n4.0', "bs-test-int-bdy7"]
fromYear=2016
toYear=2019

#grids=['T',"V", "U"]
grids=['T']
years=list(range(fromYear,toYear+1,1))
outdir=getConfigurationByID('conf.yaml','hvFiles_dir')
bproj=getConfigurationByID('conf.yaml','bproject')
msk=getConfigurationByID('conf.yaml','mesh_mask')
os.makedirs(outdir,exist_ok=True)

#-------------------------  PREPROCESSING   -------------------------
# in catalog exp must have suffix _T _U and _V


#-------------------------  PLOTS   -------------------------
# you can also add title anc stats(...,statistics=False,suptitle=False)

argo_profiles
argo_profiles_errorEvolution
hovmoller
sst
sla
Ts.dailyPointProfile
TS.yearlyMean
TS.monthlyMean(expsName,years)
ts_SalinityVol
ts_Argo2exps
ts_Argo
ts_SalinityVol
ts_DomainAvg
ts_DepthBins
MVR
MLD
anomaly_hovmoller
anomaly_ts
anomaly_map
decimate



# what we have now
profiles_plt.main(expsName,years,statistics=True,suptitle=True)
hovmoller_plt.main(expsName,years)
sst_plt.main(expsName,years)
sla_plt.main(expsName,years)

TS_plt.dailyPointProfile(expsName,years, 31,43.5)
TS_plt.monthlyMean(expsName,years)
TS_plt.yearlyMean(expsName,years)

ts_SalinityVol_plt.main(expsName,years)
ts_Argo_plt.main(expsName,years,'argo')
ts_Argo2exps_plt.main(expsName, years, 'argo_CORA')
ts_DomainAvg_plt.main(expsName,years,statistics=True,suptitle=True)
ts_DepthBins_plt.main(expsName,years,suptitle=True)
profiles_errorEvolution_plt.main(expsName,years)
currents_rose_plt.main(expsName,years)
ts_currents_plt.main(expsName,years)
mvr_plt.main(expsName, years,regression=True,statistics=True)
anomaly_hovmoller_plt.main(expsName,years)
anomaly_ts_DomainAvg_plt.main(expsName,years,statistics=True,suptitle=True)
anomaly_map_plt.main(expsName,years)

ts_MLD_plt.main(expsName,years)
